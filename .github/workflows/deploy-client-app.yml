# This workflow will build and push a node.js application to an Azure Web App when a release is created.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/azure/app-service/app-service-plan-manage#create-an-app-service-plan
#
# To configure this workflow:
#
# 1. Set up a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE with the value of your Azure publish profile.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 2. Change the values for the AZURE_WEBAPP_NAME, ANGULAR_APP_FOLDER and NODE_VERSION environment variables  (below).
#
# For more information on GitHub Actions for Azure, refer to https://github.com/Azure/Actions
# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples
name: Deploy client app to Azure

on:
  [push]

env:
  ANGULAR_APP_FOLDER: 'src/app'      # Root folder of the Angular app to be deployed
  ANGULAR_APP_DIST_FOLDER: 'src/app/dist/backtoschool' # This folder contains all files of the website for example index.html and folders css, js, assets, etc
  NODE_VERSION: '12.x'                # set this to the node version to use

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@master

    - name: Setup Node ${{ env.NODE_VERSION }} Environment
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: 'Build Angular project'
      shell: bash
      run: |
        pushd './${{ env.ANGULAR_APP_FOLDER }}'
        npm install
        npm run build -- --prod --build-optimizer
        popd

    - name: 'Setup .NET Environment for blob storage deployment action'
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.100'

    - name: 'Deploy to blob storage'
      uses: krumelur/Azure-Storage-Action@master
      with:
        enabled-static-website: 'false'
        #index-document: 'index.html'
        #error-document: 'index.html' # For Angular apps with routing enabled, this must point to the index.html file because the requested routes don't exist phyiscally and blob storage would throw a 404.
        folder: './${{ env.ANGULAR_APP_DIST_FOLDER }}'
        connection-string: ${{ secrets.BLOB_STORAGE_CONNECTION_STRING }}